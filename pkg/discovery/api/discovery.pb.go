// Code generated by protoc-gen-go. DO NOT EDIT.
// source: discovery.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The response message containing the greetings
type ExposedServicesMessages struct {
	Name                 string                                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ExposedServices      []*ExposedServicesMessages_ExposedService `protobuf:"bytes,2,rep,name=ExposedServices,proto3" json:"ExposedServices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ExposedServicesMessages) Reset()         { *m = ExposedServicesMessages{} }
func (m *ExposedServicesMessages) String() string { return proto.CompactTextString(m) }
func (*ExposedServicesMessages) ProtoMessage()    {}
func (*ExposedServicesMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0}
}

func (m *ExposedServicesMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposedServicesMessages.Unmarshal(m, b)
}
func (m *ExposedServicesMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposedServicesMessages.Marshal(b, m, deterministic)
}
func (m *ExposedServicesMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposedServicesMessages.Merge(m, src)
}
func (m *ExposedServicesMessages) XXX_Size() int {
	return xxx_messageInfo_ExposedServicesMessages.Size(m)
}
func (m *ExposedServicesMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposedServicesMessages.DiscardUnknown(m)
}

var xxx_messageInfo_ExposedServicesMessages proto.InternalMessageInfo

func (m *ExposedServicesMessages) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExposedServicesMessages) GetExposedServices() []*ExposedServicesMessages_ExposedService {
	if m != nil {
		return m.ExposedServices
	}
	return nil
}

type ExposedServicesMessages_ExposedService struct {
	Name                  string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                  uint32            `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	MeshFedConfigSelector map[string]string `protobuf:"bytes,3,rep,name=meshFedConfigSelector,proto3" json:"meshFedConfigSelector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Endpoints             []string          `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *ExposedServicesMessages_ExposedService) Reset() {
	*m = ExposedServicesMessages_ExposedService{}
}
func (m *ExposedServicesMessages_ExposedService) String() string { return proto.CompactTextString(m) }
func (*ExposedServicesMessages_ExposedService) ProtoMessage()    {}
func (*ExposedServicesMessages_ExposedService) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e7ff60feb39c8d0, []int{0, 0}
}

func (m *ExposedServicesMessages_ExposedService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExposedServicesMessages_ExposedService.Unmarshal(m, b)
}
func (m *ExposedServicesMessages_ExposedService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExposedServicesMessages_ExposedService.Marshal(b, m, deterministic)
}
func (m *ExposedServicesMessages_ExposedService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExposedServicesMessages_ExposedService.Merge(m, src)
}
func (m *ExposedServicesMessages_ExposedService) XXX_Size() int {
	return xxx_messageInfo_ExposedServicesMessages_ExposedService.Size(m)
}
func (m *ExposedServicesMessages_ExposedService) XXX_DiscardUnknown() {
	xxx_messageInfo_ExposedServicesMessages_ExposedService.DiscardUnknown(m)
}

var xxx_messageInfo_ExposedServicesMessages_ExposedService proto.InternalMessageInfo

func (m *ExposedServicesMessages_ExposedService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExposedServicesMessages_ExposedService) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ExposedServicesMessages_ExposedService) GetMeshFedConfigSelector() map[string]string {
	if m != nil {
		return m.MeshFedConfigSelector
	}
	return nil
}

func (m *ExposedServicesMessages_ExposedService) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func init() {
	proto.RegisterType((*ExposedServicesMessages)(nil), "pb.ExposedServicesMessages")
	proto.RegisterType((*ExposedServicesMessages_ExposedService)(nil), "pb.ExposedServicesMessages.ExposedService")
	proto.RegisterMapType((map[string]string)(nil), "pb.ExposedServicesMessages.ExposedService.MeshFedConfigSelectorEntry")
}

func init() { proto.RegisterFile("discovery.proto", fileDescriptor_1e7ff60feb39c8d0) }

var fileDescriptor_1e7ff60feb39c8d0 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x4d, 0x5b, 0x85, 0x8e, 0xe8, 0xca, 0xa0, 0x18, 0xaa, 0x87, 0xb2, 0xa7, 0xe2, 0xa1,
	0xc8, 0x7a, 0x11, 0xaf, 0x6e, 0xc5, 0xcb, 0x5e, 0x52, 0x4f, 0xde, 0xb6, 0xed, 0xb8, 0x16, 0x77,
	0x9b, 0x90, 0xc4, 0x62, 0xf1, 0xb7, 0x78, 0xf2, 0x8f, 0x8a, 0x51, 0x11, 0x4b, 0x77, 0xf1, 0xf6,
	0xf2, 0x12, 0xde, 0xbc, 0x8f, 0x0c, 0x8c, 0xaa, 0xda, 0x94, 0xb2, 0x25, 0xdd, 0xa5, 0x4a, 0x4b,
	0x2b, 0xd1, 0x53, 0xc5, 0xf8, 0xdd, 0x87, 0xe3, 0xec, 0x45, 0x49, 0x43, 0x55, 0x4e, 0xba, 0xad,
	0x4b, 0x32, 0x33, 0x32, 0x66, 0xbe, 0x20, 0x83, 0x08, 0x41, 0x33, 0x5f, 0x11, 0x67, 0x31, 0x4b,
	0x42, 0xe1, 0x34, 0xde, 0xc1, 0xa8, 0xf7, 0x9c, 0x7b, 0xb1, 0x9f, 0xec, 0x4e, 0xce, 0x52, 0x55,
	0xa4, 0x6b, 0x92, 0x7a, 0xbe, 0xe8, 0x47, 0x44, 0x6f, 0x1e, 0xec, 0xff, 0xf5, 0x06, 0x87, 0x23,
	0x04, 0x4a, 0x6a, 0xcb, 0xbd, 0x98, 0x25, 0x7b, 0xc2, 0x69, 0x7c, 0x85, 0xa3, 0x15, 0x99, 0xc7,
	0x1b, 0xaa, 0xae, 0x65, 0xf3, 0x50, 0x2f, 0x72, 0x5a, 0x52, 0x69, 0xa5, 0xe6, 0xbe, 0xab, 0x95,
	0xfd, 0xbf, 0x56, 0x3a, 0x1b, 0xca, 0xc9, 0x1a, 0xab, 0x3b, 0x31, 0x3c, 0x03, 0x4f, 0x21, 0xa4,
	0xa6, 0x52, 0xb2, 0x6e, 0xac, 0xe1, 0x41, 0xec, 0x27, 0xa1, 0xf8, 0x35, 0xa2, 0x5b, 0x88, 0xd6,
	0x47, 0xe2, 0x01, 0xf8, 0x4f, 0xd4, 0x7d, 0xf3, 0x7d, 0x4a, 0x3c, 0x84, 0xed, 0x76, 0xbe, 0x7c,
	0x26, 0xc7, 0x17, 0x8a, 0xaf, 0xc3, 0x95, 0x77, 0xc9, 0x26, 0x05, 0x04, 0x59, 0x3e, 0xcd, 0xf1,
	0x1e, 0x78, 0x8f, 0x65, 0xfa, 0xf3, 0xa7, 0x78, 0xb2, 0x81, 0x34, 0xda, 0x74, 0x39, 0xde, 0x4a,
	0xd8, 0x39, 0x2b, 0x76, 0xdc, 0x52, 0x5c, 0x7c, 0x04, 0x00, 0x00, 0xff, 0xff, 0x35, 0x73, 0x45,
	0xea, 0x27, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ESDSClient is the client API for ESDS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ESDSClient interface {
	// list all exported services
	ExposedServicesDiscovery(ctx context.Context, opts ...grpc.CallOption) (ESDS_ExposedServicesDiscoveryClient, error)
}

type eSDSClient struct {
	cc *grpc.ClientConn
}

func NewESDSClient(cc *grpc.ClientConn) ESDSClient {
	return &eSDSClient{cc}
}

func (c *eSDSClient) ExposedServicesDiscovery(ctx context.Context, opts ...grpc.CallOption) (ESDS_ExposedServicesDiscoveryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ESDS_serviceDesc.Streams[0], "/pb.ESDS/ExposedServicesDiscovery", opts...)
	if err != nil {
		return nil, err
	}
	x := &eSDSExposedServicesDiscoveryClient{stream}
	return x, nil
}

type ESDS_ExposedServicesDiscoveryClient interface {
	Send(*ExposedServicesMessages) error
	Recv() (*ExposedServicesMessages, error)
	grpc.ClientStream
}

type eSDSExposedServicesDiscoveryClient struct {
	grpc.ClientStream
}

func (x *eSDSExposedServicesDiscoveryClient) Send(m *ExposedServicesMessages) error {
	return x.ClientStream.SendMsg(m)
}

func (x *eSDSExposedServicesDiscoveryClient) Recv() (*ExposedServicesMessages, error) {
	m := new(ExposedServicesMessages)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ESDSServer is the server API for ESDS service.
type ESDSServer interface {
	// list all exported services
	ExposedServicesDiscovery(ESDS_ExposedServicesDiscoveryServer) error
}

func RegisterESDSServer(s *grpc.Server, srv ESDSServer) {
	s.RegisterService(&_ESDS_serviceDesc, srv)
}

func _ESDS_ExposedServicesDiscovery_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ESDSServer).ExposedServicesDiscovery(&eSDSExposedServicesDiscoveryServer{stream})
}

type ESDS_ExposedServicesDiscoveryServer interface {
	Send(*ExposedServicesMessages) error
	Recv() (*ExposedServicesMessages, error)
	grpc.ServerStream
}

type eSDSExposedServicesDiscoveryServer struct {
	grpc.ServerStream
}

func (x *eSDSExposedServicesDiscoveryServer) Send(m *ExposedServicesMessages) error {
	return x.ServerStream.SendMsg(m)
}

func (x *eSDSExposedServicesDiscoveryServer) Recv() (*ExposedServicesMessages, error) {
	m := new(ExposedServicesMessages)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ESDS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ESDS",
	HandlerType: (*ESDSServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExposedServicesDiscovery",
			Handler:       _ESDS_ExposedServicesDiscovery_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "discovery.proto",
}
